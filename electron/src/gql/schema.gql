type Query {
  users: [User]
  records(query: String, limit: Int, vehicleId: String): [Record]
  vehicles(query: String, limit: Int): [Vehicle]
  vehicle(id: String): Vehicle
  record(id: String): Record
}

type Mutation {
  createRecord(weight: Int!, vehicleId: String!): String
  createVehicle(
    size: Int!
    plateNumber: String!
    plateCode: Int!
    plateRegion: String!
  ): String
  addSecondWeight(recordId: String!, weight: Int!, createdAt: String!): Record
}

type User {
  id: ID!
  name: Name!
  createdAt: String!
}

type Product {
  id: ID!
  name: String!
}

type LicensePlateRegion {
  code: String!
  name: String!
}

type LicensePlate {
  code: Int
  region: LicensePlateRegion
  plate: String!
}

type Vehicle {
  id: ID!
  size: Int
  licensePlate: LicensePlate!
}

type Country {
  phoneCode: Int
  name: String!
}

type PhoneNumber {
  number: String!
  countryCode: Country!
}

type Customer {
  id: ID!
  createdAt: String!
  name: Name!
  phoneNumber: PhoneNumber
}

type Name {
  display: String
  first: String
  last: String
}

type Weight {
  createdAt: String
  weight: Int!
}

type Record {
  id: ID!
  createdAt: String!
  updatedAt: String
  customer: Customer
  operator: User
  vehicle: Vehicle
  product: Product
  weights: [Weight]
}

type Subscription {
  reading: Int!
}
